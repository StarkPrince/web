{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAEA,ADKA,ICLM,ADKN,ICLU,ADKV,GCLa,ADKb,ICLiB,MAAA,CAAA,EDKjB,ECLqB,CAAC,SDKtB;ECLwB,ADQtB,ICR0B,EAAE,GDQ5B,IAAA,CAAoB,CCRiB,GDQF,EAAA;ECRI,EDQnB,CCRsB,EAAE,CDQxB,CAAA,IAAI,GAAJ,IAAI;ACRsB,CAAE,CAAC,EDMjD,IAAA,CAAA,MAAM,GAAkC,CAAA,CAAE;ACJ5C,EDMwC,ECNpC,CAAC,GAAG,CAAC;EAAE,ADQT,ICRa,ADQb,CAAA,CCRe,QDQf,CAAA,GAAG,GAAH,UAAI,QAAgB,EAAA;ACRO,CAAE,CAAC,EDS5B,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;ACP9B,EDQE,CAAC,CCRC,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAA;EAChB,ADSA,IAAA,CAAA,ECTO,CAAC,GAAG,CAAC,EDSZ,CAAA,GAAG,GAAH,ECTuB,CAAC,ODSpB,MAAiB,EAAA;ACRvB,CAAC,CAAC,EDSE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;ACRpC,EDSE,CAAC,CCTC,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAA;EAChB,ADUA,IAAA,CAAA,ECVO,CAAC,GAAG,CAAC,EDUZ,CAAA,EAAE,GAAF,GCVuB,CAAC,MDUrB,SAAiB,EAAE,QAAkB,EAAA;ACT1C,CAAC,CAAC,EDUE,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;ACTjD,IAAI,ADUA,CCVC,EAAE,CAAC,IDUI,CAAC,GCVG,CDUC,CCVC,ADUA,QAAQ,CAAC,GCVT;EAChB,EDUE,IAAI,CCVC,ADUA,CCVC,GAAG,CAAC,CDUC,CAAC,SCVS,ADUA,CCVC,ADUA,GAAG,QAAQ;ACTrC,CAAC,CAAC,ADUA,CAAC;ACRH,EDUE,ECVE,CAAC,CDUH,CAAA,KCVU,CAAC,GDUX,CAAA,ICVmB,CAAC,EDUb,GAAP,UAAQ,SAAiB,EAAA;ACR3B,IDSI,GCTG,CAAC,ADSE,GCTC,CAAC,IAAI,ADSE,CCTD,EDSI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;MACtC;;IAEF,QAAQ,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAA;MACxB,QAAQ,CAAA,CAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EACH,OAAA,IAAC;AAAD,CA5BA,CAAA,CAAA;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n  name?: string;\r\n  age?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n  events: { [key: string]: Callback[] } = {};\r\n\r\n  constructor(private data: UserProps) {}\r\n\r\n  get(propName: string): number | string {\r\n    return this.data[propName];\r\n  }\r\n\r\n  set(update: UserProps): void {\r\n    Object.assign(this.data, update);\r\n  }\r\n\r\n  on(eventName: string, callback: Callback): void {\r\n    const handlers = this.events[eventName] || [];\r\n    handlers.push(callback);\r\n    this.events[eventName] = handlers;\r\n  }\r\n\r\n  trigger(eventName: string): void {\r\n    const handlers = this.events[eventName];\r\n    if (!handlers || handlers.length === 0) {\r\n      return;\r\n    }\r\n    handlers.forEach((callback) => {\r\n      callback();\r\n    });\r\n  }\r\n}\r\n","import { User } from \"./models/User\";\r\n\r\nconst user = new User({ name: \"Prateek\", age: 20 });\r\n\r\nuser.set({ name: \"Prince Raj\" });\r\n\r\nuser.on(\"change\", () => {\r\n  console.log(\"#1 change\");\r\n});\r\nuser.on(\"change\", () => {\r\n  console.log(\"#2 change\");\r\n});\r\nuser.on(\"change\", () => {\r\n  console.log(\"#3 change\");\r\n});\r\n\r\nuser.trigger(\"change\");\r\n\r\nconsole.log(user);\r\n"]}